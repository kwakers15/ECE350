$date
	Thu Jan 26 23:22:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 1 ! LT $end
$var wire 32 " Res [31:0] $end
$var wire 1 # OVF $end
$var wire 1 $ NE $end
$var reg 32 % A [31:0] $end
$var reg 5 & ALU_OP [4:0] $end
$var reg 32 ' B [31:0] $end
$var reg 1 ( ExpLT $end
$var reg 1 ) ExpNE $end
$var reg 1 * ExpOVF $end
$var reg 32 + ExpRes [31:0] $end
$var reg 5 , Shift_Amt [4:0] $end
$var reg 128 - actFileName [127:0] $end
$var reg 128 . diffFileName [127:0] $end
$var reg 128 / expFileName [127:0] $end
$var reg 128 0 testName [127:0] $end
$var integer 32 1 actFile [31:0] $end
$var integer 32 2 diffFile [31:0] $end
$var integer 32 3 errors [31:0] $end
$var integer 32 4 expFile [31:0] $end
$var integer 32 5 expScan [31:0] $end
$var integer 32 6 tests [31:0] $end
$scope module Tester $end
$var wire 5 7 ctrl_ALUopcode [4:0] $end
$var wire 5 8 ctrl_shiftamt [4:0] $end
$var wire 32 9 data_operandA [31:0] $end
$var wire 32 : data_operandB [31:0] $end
$var wire 1 ! isLessThan $end
$var wire 32 ; w7 [31:0] $end
$var wire 32 < w8 [31:0] $end
$var wire 32 = sra_result [31:0] $end
$var wire 32 > sll_result [31:0] $end
$var wire 1 # overflow $end
$var wire 32 ? or_result [31:0] $end
$var wire 32 @ not_operandB [31:0] $end
$var wire 1 $ isNotEqual $end
$var wire 32 A input_B [31:0] $end
$var wire 32 B data_result [31:0] $end
$var wire 32 C and_result [31:0] $end
$var wire 32 D add_sub_result [31:0] $end
$var wire 1 E Cin $end
$scope module adder $end
$var wire 1 E Cin $end
$var wire 1 F G0 $end
$var wire 1 G G1 $end
$var wire 1 H G2 $end
$var wire 1 I G3 $end
$var wire 1 J P0 $end
$var wire 1 K P0c0 $end
$var wire 1 L P1 $end
$var wire 1 M P1G0 $end
$var wire 1 N P1P0c0 $end
$var wire 1 O P2 $end
$var wire 1 P P2G1 $end
$var wire 1 Q P2P1G0 $end
$var wire 1 R P2P1P0c0 $end
$var wire 1 S P3 $end
$var wire 1 T P3G2 $end
$var wire 1 U P3P2G1 $end
$var wire 1 V P3P2P1G0 $end
$var wire 1 W P3P2P1P0c0 $end
$var wire 1 X block0_zero $end
$var wire 1 Y block1_zero $end
$var wire 1 Z block2_zero $end
$var wire 1 [ block3_zero $end
$var wire 1 \ c1 $end
$var wire 1 ] c10 $end
$var wire 1 ^ c11 $end
$var wire 1 _ c12 $end
$var wire 1 ` c13 $end
$var wire 1 a c14 $end
$var wire 1 b c15 $end
$var wire 1 c c16 $end
$var wire 1 d c17 $end
$var wire 1 e c18 $end
$var wire 1 f c19 $end
$var wire 1 g c2 $end
$var wire 1 h c20 $end
$var wire 1 i c21 $end
$var wire 1 j c22 $end
$var wire 1 k c23 $end
$var wire 1 l c24 $end
$var wire 1 m c25 $end
$var wire 1 n c26 $end
$var wire 1 o c27 $end
$var wire 1 p c28 $end
$var wire 1 q c29 $end
$var wire 1 r c3 $end
$var wire 1 s c30 $end
$var wire 1 t c31 $end
$var wire 1 u c32 $end
$var wire 1 v c4 $end
$var wire 1 w c5 $end
$var wire 1 x c6 $end
$var wire 1 y c7 $end
$var wire 1 z c8 $end
$var wire 1 { c9 $end
$var wire 32 | data_operandA [31:0] $end
$var wire 32 } data_operandB [31:0] $end
$var wire 1 ~ g0 $end
$var wire 1 !" g1 $end
$var wire 1 "" g10 $end
$var wire 1 #" g11 $end
$var wire 1 $" g12 $end
$var wire 1 %" g13 $end
$var wire 1 &" g14 $end
$var wire 1 '" g15 $end
$var wire 1 (" g16 $end
$var wire 1 )" g17 $end
$var wire 1 *" g18 $end
$var wire 1 +" g19 $end
$var wire 1 ," g2 $end
$var wire 1 -" g20 $end
$var wire 1 ." g21 $end
$var wire 1 /" g22 $end
$var wire 1 0" g23 $end
$var wire 1 1" g24 $end
$var wire 1 2" g25 $end
$var wire 1 3" g26 $end
$var wire 1 4" g27 $end
$var wire 1 5" g28 $end
$var wire 1 6" g29 $end
$var wire 1 7" g3 $end
$var wire 1 8" g30 $end
$var wire 1 9" g31 $end
$var wire 1 :" g4 $end
$var wire 1 ;" g5 $end
$var wire 1 <" g6 $end
$var wire 1 =" g7 $end
$var wire 1 >" g8 $end
$var wire 1 ?" g9 $end
$var wire 1 ! isLessThan $end
$var wire 1 @" is_1_bit $end
$var wire 1 # overflow $end
$var wire 1 A" p0 $end
$var wire 1 B" p0c0 $end
$var wire 1 C" p1 $end
$var wire 1 D" p10 $end
$var wire 1 E" p10g9 $end
$var wire 1 F" p10p9g8 $end
$var wire 1 G" p10p9p8c8 $end
$var wire 1 H" p11 $end
$var wire 1 I" p11g10 $end
$var wire 1 J" p11p10g9 $end
$var wire 1 K" p11p10p9g8 $end
$var wire 1 L" p11p10p9p8c8 $end
$var wire 1 M" p12 $end
$var wire 1 N" p12g11 $end
$var wire 1 O" p12p11g10 $end
$var wire 1 P" p12p11p10g9 $end
$var wire 1 Q" p12p11p10p9g8 $end
$var wire 1 R" p12p11p10p9p8c8 $end
$var wire 1 S" p13 $end
$var wire 1 T" p13g12 $end
$var wire 1 U" p13p12g11 $end
$var wire 1 V" p13p12p11g10 $end
$var wire 1 W" p13p12p11p10g9 $end
$var wire 1 X" p13p12p11p10p9g8 $end
$var wire 1 Y" p13p12p11p10p9p8c8 $end
$var wire 1 Z" p14 $end
$var wire 1 [" p14g13 $end
$var wire 1 \" p14p13g12 $end
$var wire 1 ]" p14p13p12g11 $end
$var wire 1 ^" p14p13p12p11g10 $end
$var wire 1 _" p14p13p12p11p10g9 $end
$var wire 1 `" p14p13p12p11p10p9g8 $end
$var wire 1 a" p14p13p12p11p10p9p8c8 $end
$var wire 1 b" p15 $end
$var wire 1 c" p15g14 $end
$var wire 1 d" p15p14g13 $end
$var wire 1 e" p15p14p13g12 $end
$var wire 1 f" p15p14p13p12g11 $end
$var wire 1 g" p15p14p13p12p11g10 $end
$var wire 1 h" p15p14p13p12p11p10g9 $end
$var wire 1 i" p15p14p13p12p11p10p9g8 $end
$var wire 1 j" p16 $end
$var wire 1 k" p16c16 $end
$var wire 1 l" p17 $end
$var wire 1 m" p17g16 $end
$var wire 1 n" p17p16c16 $end
$var wire 1 o" p18 $end
$var wire 1 p" p18g17 $end
$var wire 1 q" p18p17g16 $end
$var wire 1 r" p18p17p16c16 $end
$var wire 1 s" p19 $end
$var wire 1 t" p19g18 $end
$var wire 1 u" p19p18g17 $end
$var wire 1 v" p19p18p17g16 $end
$var wire 1 w" p19p18p17p16c16 $end
$var wire 1 x" p1g0 $end
$var wire 1 y" p1p0c0 $end
$var wire 1 z" p2 $end
$var wire 1 {" p20 $end
$var wire 1 |" p20g19 $end
$var wire 1 }" p20p19g18 $end
$var wire 1 ~" p20p19p18g17 $end
$var wire 1 !# p20p19p18p17g16 $end
$var wire 1 "# p20p19p18p17p16c16 $end
$var wire 1 ## p21 $end
$var wire 1 $# p21g20 $end
$var wire 1 %# p21p20g19 $end
$var wire 1 &# p21p20p19g18 $end
$var wire 1 '# p21p20p19p18g17 $end
$var wire 1 (# p21p20p19p18p17g16 $end
$var wire 1 )# p21p20p19p18p17p16c16 $end
$var wire 1 *# p22 $end
$var wire 1 +# p22g21 $end
$var wire 1 ,# p22p21g20 $end
$var wire 1 -# p22p21p20g19 $end
$var wire 1 .# p22p21p20p19g18 $end
$var wire 1 /# p22p21p20p19p18g17 $end
$var wire 1 0# p22p21p20p19p18p17g16 $end
$var wire 1 1# p22p21p20p19p18p17p16c16 $end
$var wire 1 2# p23 $end
$var wire 1 3# p23g22 $end
$var wire 1 4# p23p22g21 $end
$var wire 1 5# p23p22p21g20 $end
$var wire 1 6# p23p22p21p20g19 $end
$var wire 1 7# p23p22p21p20p19g18 $end
$var wire 1 8# p23p22p21p20p19p18g17 $end
$var wire 1 9# p23p22p21p20p19p18p17g16 $end
$var wire 1 :# p24 $end
$var wire 1 ;# p24c24 $end
$var wire 1 <# p25 $end
$var wire 1 =# p25g24 $end
$var wire 1 ># p25p24c24 $end
$var wire 1 ?# p26 $end
$var wire 1 @# p26g25 $end
$var wire 1 A# p26p25g24 $end
$var wire 1 B# p26p25p24c24 $end
$var wire 1 C# p27 $end
$var wire 1 D# p27g26 $end
$var wire 1 E# p27p26g25 $end
$var wire 1 F# p27p26p25g24 $end
$var wire 1 G# p27p26p25p24c24 $end
$var wire 1 H# p28 $end
$var wire 1 I# p28g27 $end
$var wire 1 J# p28p27g26 $end
$var wire 1 K# p28p27p26g25 $end
$var wire 1 L# p28p27p26p25g24 $end
$var wire 1 M# p28p27p26p25p24c24 $end
$var wire 1 N# p29 $end
$var wire 1 O# p29g28 $end
$var wire 1 P# p29p28g27 $end
$var wire 1 Q# p29p28p27g26 $end
$var wire 1 R# p29p28p27p26g25 $end
$var wire 1 S# p29p28p27p26p25g24 $end
$var wire 1 T# p29p28p27p26p25p24c24 $end
$var wire 1 U# p2g1 $end
$var wire 1 V# p2p1g0 $end
$var wire 1 W# p2p1p0c0 $end
$var wire 1 X# p3 $end
$var wire 1 Y# p30 $end
$var wire 1 Z# p30g29 $end
$var wire 1 [# p30p29g28 $end
$var wire 1 \# p30p29p28g27 $end
$var wire 1 ]# p30p29p28p27g26 $end
$var wire 1 ^# p30p29p28p27p26g25 $end
$var wire 1 _# p30p29p28p27p26p25g24 $end
$var wire 1 `# p30p29p28p27p26p25p24c24 $end
$var wire 1 a# p31 $end
$var wire 1 b# p31g30 $end
$var wire 1 c# p31p30g29 $end
$var wire 1 d# p31p30p29g28 $end
$var wire 1 e# p31p30p29p28g27 $end
$var wire 1 f# p31p30p29p28p27g26 $end
$var wire 1 g# p31p30p29p28p27p26g25 $end
$var wire 1 h# p31p30p29p28p27p26p25g24 $end
$var wire 1 i# p3g2 $end
$var wire 1 j# p3p2g1 $end
$var wire 1 k# p3p2p1g0 $end
$var wire 1 l# p3p2p1p0c0 $end
$var wire 1 m# p4 $end
$var wire 1 n# p4g3 $end
$var wire 1 o# p4p3g2 $end
$var wire 1 p# p4p3p2g1 $end
$var wire 1 q# p4p3p2p1g0 $end
$var wire 1 r# p4p3p2p1p0c0 $end
$var wire 1 s# p5 $end
$var wire 1 t# p5g4 $end
$var wire 1 u# p5p4g3 $end
$var wire 1 v# p5p4p3g2 $end
$var wire 1 w# p5p4p3p2g1 $end
$var wire 1 x# p5p4p3p2p1g0 $end
$var wire 1 y# p5p4p3p2p1p0c0 $end
$var wire 1 z# p6 $end
$var wire 1 {# p6g5 $end
$var wire 1 |# p6p5g4 $end
$var wire 1 }# p6p5p4g3 $end
$var wire 1 ~# p6p5p4p3g2 $end
$var wire 1 !$ p6p5p4p3p2g1 $end
$var wire 1 "$ p6p5p4p3p2p1g0 $end
$var wire 1 #$ p6p5p4p3p2p1p0c0 $end
$var wire 1 $$ p7 $end
$var wire 1 %$ p7g6 $end
$var wire 1 &$ p7p6g5 $end
$var wire 1 '$ p7p6p5g4 $end
$var wire 1 ($ p7p6p5p4g3 $end
$var wire 1 )$ p7p6p5p4p3g2 $end
$var wire 1 *$ p7p6p5p4p3p2g1 $end
$var wire 1 +$ p7p6p5p4p3p2p1g0 $end
$var wire 1 ,$ p8 $end
$var wire 1 -$ p8c8 $end
$var wire 1 .$ p9 $end
$var wire 1 /$ p9g8 $end
$var wire 1 0$ p9p8c8 $end
$var wire 1 $ isNotEqual $end
$var wire 32 1$ data_result [31:0] $end
$upscope $end
$scope module and_op $end
$var wire 32 2$ data_operandA [31:0] $end
$var wire 32 3$ data_operandB [31:0] $end
$var wire 32 4$ data_result [31:0] $end
$upscope $end
$scope module choose_op $end
$var wire 32 5$ in0 [31:0] $end
$var wire 32 6$ in1 [31:0] $end
$var wire 32 7$ in2 [31:0] $end
$var wire 32 8$ in6 [31:0] $end
$var wire 32 9$ in7 [31:0] $end
$var wire 3 :$ select [2:0] $end
$var wire 32 ;$ w2 [31:0] $end
$var wire 32 <$ w1 [31:0] $end
$var wire 32 =$ out [31:0] $end
$var wire 32 >$ in5 [31:0] $end
$var wire 32 ?$ in4 [31:0] $end
$var wire 32 @$ in3 [31:0] $end
$scope module mux1 $end
$var wire 32 A$ in0 [31:0] $end
$var wire 32 B$ in1 [31:0] $end
$var wire 32 C$ in2 [31:0] $end
$var wire 2 D$ select [1:0] $end
$var wire 32 E$ w2 [31:0] $end
$var wire 32 F$ w1 [31:0] $end
$var wire 32 G$ out [31:0] $end
$var wire 32 H$ in3 [31:0] $end
$scope module first_bottom $end
$var wire 32 I$ in0 [31:0] $end
$var wire 1 J$ select $end
$var wire 32 K$ out [31:0] $end
$var wire 32 L$ in1 [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 32 M$ in0 [31:0] $end
$var wire 32 N$ in1 [31:0] $end
$var wire 1 O$ select $end
$var wire 32 P$ out [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 Q$ in0 [31:0] $end
$var wire 32 R$ in1 [31:0] $end
$var wire 1 S$ select $end
$var wire 32 T$ out [31:0] $end
$upscope $end
$upscope $end
$scope module mux2 $end
$var wire 32 U$ in2 [31:0] $end
$var wire 32 V$ in3 [31:0] $end
$var wire 2 W$ select [1:0] $end
$var wire 32 X$ w2 [31:0] $end
$var wire 32 Y$ w1 [31:0] $end
$var wire 32 Z$ out [31:0] $end
$var wire 32 [$ in1 [31:0] $end
$var wire 32 \$ in0 [31:0] $end
$scope module first_bottom $end
$var wire 32 ]$ in0 [31:0] $end
$var wire 32 ^$ in1 [31:0] $end
$var wire 1 _$ select $end
$var wire 32 `$ out [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 1 a$ select $end
$var wire 32 b$ out [31:0] $end
$var wire 32 c$ in1 [31:0] $end
$var wire 32 d$ in0 [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 e$ in0 [31:0] $end
$var wire 32 f$ in1 [31:0] $end
$var wire 1 g$ select $end
$var wire 32 h$ out [31:0] $end
$upscope $end
$upscope $end
$scope module mux3 $end
$var wire 32 i$ in0 [31:0] $end
$var wire 32 j$ in1 [31:0] $end
$var wire 1 k$ select $end
$var wire 32 l$ out [31:0] $end
$upscope $end
$upscope $end
$scope module not_B $end
$var wire 32 m$ data_operandA [31:0] $end
$var wire 32 n$ data_result [31:0] $end
$upscope $end
$scope module or_op $end
$var wire 32 o$ data_operandA [31:0] $end
$var wire 32 p$ data_operandB [31:0] $end
$var wire 32 q$ data_result [31:0] $end
$upscope $end
$scope module sll_op $end
$var wire 5 r$ ctrl_shiftamt [4:0] $end
$var wire 32 s$ data_operandA [31:0] $end
$var wire 32 t$ shift_8_result [31:0] $end
$var wire 32 u$ shift_4_result [31:0] $end
$var wire 32 v$ shift_2_result [31:0] $end
$var wire 32 w$ shift_1_result [31:0] $end
$var wire 32 x$ data_result [31:0] $end
$scope module shift_1 $end
$var wire 1 y$ ctrl_bit $end
$var wire 32 z$ data_operandA [31:0] $end
$var wire 32 {$ data_result [31:0] $end
$upscope $end
$scope module shift_16 $end
$var wire 1 |$ ctrl_bit $end
$var wire 32 }$ data_result [31:0] $end
$var wire 32 ~$ data_operandA [31:0] $end
$upscope $end
$scope module shift_2 $end
$var wire 1 !% ctrl_bit $end
$var wire 32 "% data_operandA [31:0] $end
$var wire 32 #% data_result [31:0] $end
$upscope $end
$scope module shift_4 $end
$var wire 1 $% ctrl_bit $end
$var wire 32 %% data_operandA [31:0] $end
$var wire 32 &% data_result [31:0] $end
$upscope $end
$scope module shift_8 $end
$var wire 1 '% ctrl_bit $end
$var wire 32 (% data_operandA [31:0] $end
$var wire 32 )% data_result [31:0] $end
$upscope $end
$upscope $end
$scope module sra_op $end
$var wire 5 *% ctrl_shiftamt [4:0] $end
$var wire 32 +% data_operandA [31:0] $end
$var wire 32 ,% shift_8_result [31:0] $end
$var wire 32 -% shift_4_result [31:0] $end
$var wire 32 .% shift_2_result [31:0] $end
$var wire 32 /% shift_1_result [31:0] $end
$var wire 32 0% data_result [31:0] $end
$scope module shift_1 $end
$var wire 1 1% ctrl_bit $end
$var wire 32 2% data_operandA [31:0] $end
$var wire 32 3% data_result [31:0] $end
$upscope $end
$scope module shift_16 $end
$var wire 1 4% ctrl_bit $end
$var wire 32 5% data_result [31:0] $end
$var wire 32 6% data_operandA [31:0] $end
$upscope $end
$scope module shift_2 $end
$var wire 1 7% ctrl_bit $end
$var wire 32 8% data_operandA [31:0] $end
$var wire 32 9% data_result [31:0] $end
$upscope $end
$scope module shift_4 $end
$var wire 1 :% ctrl_bit $end
$var wire 32 ;% data_operandA [31:0] $end
$var wire 32 <% data_result [31:0] $end
$upscope $end
$scope module shift_8 $end
$var wire 1 =% ctrl_bit $end
$var wire 32 >% data_operandA [31:0] $end
$var wire 32 ?% data_result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ?%
b0 >%
0=%
b0 <%
b0 ;%
0:%
b0 9%
b0 8%
07%
b0 6%
b0 5%
04%
b0 3%
b0 2%
01%
b0 0%
b0 /%
b0 .%
b0 -%
b0 ,%
b0 +%
b0 *%
b0 )%
b0 (%
0'%
b0 &%
b0 %%
0$%
b0 #%
b0 "%
0!%
b0 ~$
b0 }$
0|$
b0 {$
b0 z$
0y$
b0 x$
b0 w$
b0 v$
b0 u$
b0 t$
b0 s$
b0 r$
b0 q$
b0 p$
b0 o$
b11111111111111111111111111111111 n$
b0 m$
b0 l$
0k$
b0 j$
b0 i$
b0 h$
0g$
bz f$
b0 e$
b0 d$
b0 c$
b0 b$
0a$
bz `$
0_$
bz ^$
bz ]$
b0 \$
b0 [$
b0 Z$
b0 Y$
bz X$
b0 W$
bz V$
bz U$
b0 T$
0S$
b0 R$
b0 Q$
b0 P$
0O$
b0 N$
b0 M$
b0 L$
b0 K$
0J$
b0 I$
b0 H$
b0 G$
b0 F$
b0 E$
b0 D$
b0 C$
b0 B$
b0 A$
b0 @$
b0 ?$
b0 >$
b0 =$
b0 <$
b0 ;$
b0 :$
bz 9$
bz 8$
b0 7$
b0 6$
b0 5$
b0 4$
b0 3$
b0 2$
b0 1$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
b0 }
b0 |
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
b0 D
b0 C
b0 B
b0 A
b11111111111111111111111111111111 @
b0 ?
b0 >
b0 =
bz <
bz ;
b0 :
b0 9
b0 8
b0 7
b0 6
bx 5
b0 4
b0 3
bx 2
bx 1
b11000010110010001100100 0
b110000101100100011001000101111101100101011110000111000000101110011000110111001101110110 /
b11000010110010001100100010111110110010001101001011001100110011000101110011000110111001101110110 .
b110000101100100011001000101111101100001011000110111010001110101011000010110110000101110011000110111001101110110 -
b0 ,
b0 +
0*
0)
0(
b0 '
b0 &
b0 %
0$
0#
b0 "
0!
$end
