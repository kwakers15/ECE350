$date
	Mon Jan 30 21:52:16 2023
$end
$version
	GTKWave Analyzer v3.3.107 (w)1999-2020 BSI
$end
$timescale
	100ps
$end
$scope module mystery_tb $end
$scope module Mystery $end
$var wire 1 , clk $end
$var wire 8 . num2[7:0] $end
$var wire 8 / out[7:0] $end
$var wire 8 - num1[7:0] $end
$scope module add $end
$var wire 1 $ Cin $end
$var wire 8 " A[7:0] $end
$var wire 8 # B[7:0] $end
$var wire 8 % S[7:0] $end
$upscope $end
$var wire 1 0 reset $end
$scope module reg1 $end
$var wire 1 & clr $end
$var wire 8 ' d[7:0] $end
$var wire 8 ( out[7:0] $end
$upscope $end
$scope module reg2 $end
$var wire 1 ) clr $end
$var wire 8 * d[7:0] $end
$var wire 8 + out[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
0&
b0 -
0,
b0 .
1$
b1 %
00
b0 *
b0 "
b1 '
b1 /
b0 #
b0 (
0)
$end
#50
1)
1&
10
#100
1,
#200
0,
#300
1,
#400
0,
#500
1,
00
b1 -
0)
0$
0&
b1 (
b1 "
b1 *
#600
0,
#700
1,
b1 +
b10 %
b1 .
b1 #
b10 '
b10 /
#800
0,
#900
1,
b11 /
b11 %
b10 *
b10 -
b11 '
b10 (
b10 "
#1000
0,
#1100
1,
b11 "
b11 *
b101 /
b101 %
b10 +
b11 (
b11 -
b101 '
b10 #
b10 .
#1200
0,
#1300
1,
b0 .
b1 %
1)
b0 "
b1 /
10
b0 *
b0 #
b0 +
1$
1&
b1 '
b0 (
b0 -
#1400
00
0,
0)
0&
#1500
1,
b1 -
b1 "
b1 *
b1 (
0$
#1600
0,
#1700
1,
b10 %
b1 .
b10 /
b1 +
b1 #
b10 '
#1800
0,
#1900
1,
b11 '
b11 %
b10 -
b11 /
b10 (
b10 "
b10 *
#2000
0,
#2100
1,
b11 *
b10 .
b101 %
b101 '
b11 "
b11 -
b10 #
b11 (
b10 +
b101 /
#2200
0,
#2300
1,
b1000 /
b1000 %
b11 .
b101 *
b11 +
b101 "
b1000 '
b101 (
b101 -
b11 #
#2400
0,
#2500
1,
b0 #
b0 .
1&
1$
b1 %
b1 /
10
b0 -
b0 +
1)
b0 *
b0 (
b0 "
b1 '
#2600
0,
0&
00
0)
#2700
1,
0$
b1 "
b1 -
b1 (
b1 *
#2800
0,
#2900
1,
b10 /
b1 .
b1 #
b10 %
b10 '
b1 +
#3000
0,
#3100
1,
b11 %
b10 *
b11 /
b11 '
b10 (
b10 -
b10 "
#3200
0,
#3300
1,
b11 "
b11 *
b10 +
b101 %
b10 #
b10 .
b11 -
b101 /
b11 (
b101 '
#3400
0,
#3500
1,
b1000 '
b11 #
b101 *
b101 "
b1000 %
b11 +
b101 (
b11 .
b1000 /
b101 -
#3600
0,
#3700
1,
b1000 -
b1101 %
b101 #
b1101 '
b1000 "
b1000 *
b1101 /
b101 +
b101 .
b1000 (
#3800
0,
#3900
1,
b1101 (
b1101 "
b10101 %
b1101 -
b10101 '
b1000 #
b1000 .
b1101 *
b1000 +
b10101 /
#4000
0,
#4100
1,
b100010 /
b100010 '
b10101 "
b10101 (
b10101 -
b100010 %
b1101 +
b1101 #
b10101 *
b1101 .
#4200
0,
#4300
1,
b10101 .
b1100010 -
b1110111 '
b1110111 /
b1100010 (
b1100010 "
b1100010 *
b1110111 %
b10101 #
b10101 +
#4400
0,
#4500
1,
b1100010 +
b1110111 (
b1110111 -
b1100010 .
b11011001 /
b11011001 '
b1100010 #
b1110111 "
b11011001 %
b1110111 *
#4600
0,
#4700
1,
b0 *
b1 /
b0 (
b0 +
b0 .
1)
b0 -
b1 %
b1 '
1$
10
b0 "
1&
b0 #
#4800
0)
0,
0&
00
#4900
b1 *
b1 (
b1 -
1,
0$
b1 "
#5000
0,
#5100
1,
b10 /
b1 #
b1 .
b1 +
b10 '
b10 %
#5200
0,
#5300
1,
b1 %
b0 .
1)
b0 *
b0 #
10
b1 /
b1 '
b0 +
1&
b0 "
1$
b0 (
b0 -
#5400
00
0,
0)
0&
#5500
1,
b1 -
b1 *
b1 (
0$
b1 "
#5600
0,
#5700
1,
b1 .
b10 %
b1 #
b1 +
b10 /
b10 '
#5800
0,
#5900
1,
b11 '
b11 %
b10 "
b10 -
b11 /
b10 (
b10 *
#6000
0,
#6100
1,
b11 *
b11 "
b101 '
b101 %
b10 .
b11 (
b10 +
b10 #
b101 /
b11 -
#6200
0,
